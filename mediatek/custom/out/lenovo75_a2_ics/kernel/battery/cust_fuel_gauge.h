#include <mach/mt6575_typedefs.h>

#define FGAUGE_VOLTAGE_FACTOR           2.44 // mV
#define FGAUGE_CURRENT_FACTOR           6.25 // uV/Rsns
#define FGAUGE_CURRENT_OFFSET_FACTOR    1.56 // uV/Rsns
#define FGAUGE_CAR_FACTOR               6.25 // uV/Rsns
#define FGAUGE_RSNS_FACTOR              0.02 // Ohm

//#define COMPASATE_OCV                   80 // mV for evb
#define COMPASATE_OCV                   40 // mV for phone

#define BATTERY_VOLTAGE_MINIMUM         3400
#define BATTERY_VOLTAGE_MAXIMUM         4200

#define BATTERY_CAPACITY_MAXIMUM        3600

#define TEMPERATURE_T0                  110
#define TEMPERATURE_T1                  0
#define TEMPERATURE_T2                  25
#define TEMPERATURE_T3                  50
#define TEMPERATURE_T                   255 // This should be fixed, never change the value

//#define BATT_CAPACITY                   1280
#define BATT_CAPACITY                   3602

#define ENABLE_SW_COULOMB_COUNTER       0 // 1 is enable, 0 is disable
//#define ENABLE_SW_COULOMB_COUNTER       1 // 1 is enable, 0 is disable

//#define FG_CURRENT_OFFSET_DISCHARGING 	31
#define FG_CURRENT_OFFSET_DISCHARGING 	0

#define FG_RESISTANCE 	20

#define FG_METER_RESISTANCE 	0
//#define FG_METER_RESISTANCE 	540 // current meter

//#define MAX_BOOTING_TIME_FGCURRENT	5*6 // 5 seconds, 6 points = 1s
#define MAX_BOOTING_TIME_FGCURRENT	1*10 // 10s

#if defined(CONFIG_POWER_EXT)
//#define OCV_BOARD_COMPESATE	32 //mV
#define OCV_BOARD_COMPESATE	72 //mV
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#else
//#define OCV_BOARD_COMPESATE	0 //mV
//#define OCV_BOARD_COMPESATE	48 //mV
//#define OCV_BOARD_COMPESATE	25 //mV
#define OCV_BOARD_COMPESATE	0 //mV
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
//#define R_FG_BOARD_SLOPE	1057 //slope
//#define R_FG_BOARD_SLOPE	1075 //slope
#endif

#define Q_MAX_POS_50	3604
#define Q_MAX_POS_25	3602
#define Q_MAX_POS_0		3425
#define Q_MAX_NEG_10	3110

#define Q_MAX_POS_50_H_CURRENT	3507
#define Q_MAX_POS_25_H_CURRENT	3507
#define Q_MAX_POS_0_H_CURRENT	  3291
#define Q_MAX_NEG_10_H_CURRENT	2914

#define R_FG_VALUE 				20 // mOhm, base is 20
#define CURRENT_DETECT_R_FG	100  //10mA

#define OSR_SELECT_7			0

#define CAR_TUNE_VALUE			102 //1.02

#ifdef MTK_NCP1851_SUPPORT
#define OCV_USE_BATSNS
#define R_QFET_VALUE			27 // (23+31)/2
#endif

/////////////////////////////////////////////////////////////////////
// <DOD, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
    {0  , 4158},
    {2  , 4125},
    {3  , 4098},
    {5  , 4083},
    {7  , 4060},
    {9  , 4030},
    {10 , 4006},
    {12 , 3989},
    {14 , 3977},
    {16 , 3970},
    {17 , 3961},
    {19 , 3953},
    {21 , 3948},
    {23 , 3938},
    {24 , 3929},
    {26 , 3919},
    {28 , 3908},
    {29 , 3897},
    {31 , 3886},
    {33 , 3874},
    {35 , 3865},
    {36 , 3855},
    {38 , 3847},
    {40 , 3839},
    {42 , 3832},
    {43 , 3827},
    {45 , 3822},
    {47 , 3815},
    {49 , 3811},
    {50 , 3806},
    {52 , 3802},
    {54 , 3798},
    {56 , 3794},
    {57 , 3792},
    {59 , 3788},
    {61 , 3785},
    {62 , 3784},
    {64 , 3781},
    {66 , 3780},
    {68 , 3778},
    {69 , 3775},
    {71 , 3772},
    {73 , 3768},
    {75 , 3766},
    {76 , 3760},
    {78 , 3756},
    {80 , 3752},
    {82 , 3747},
    {83 , 3739},
    {85 , 3733},
    {87 , 3726},
    {88 , 3718},
    {90 , 3712},
    {92 , 3706},
    {94 , 3698},
    {95 , 3688},
    {97 , 3665},
    {99 , 3625},
    {100, 3591},
    {100, 3562},
    {100, 3539},
    {100, 3519},
    {100, 3500},
    {100, 3488},
    {100, 3475},
    {100, 3466},
    {100, 3457},
    {100, 3451},
    {100, 3443},
    {100, 3439},
    {100, 3434},
    {100, 3430},
    {100, 3427},
    {100, 3423},
    {100, 3420}
};

// T1 0C
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{
    {0  , 4168},
    {2  , 4142},
    {3  , 4123},
    {5  , 4109},
    {6  , 4095},
    {8  , 4089},
    {9  , 4079},
    {11 , 4060},
    {13 , 4035},
    {14 , 4012},
    {16 , 3996},
    {17 , 3986},
    {19 , 3976},
    {20 , 3969},
    {22 , 3962},
    {24 , 3955},
    {25 , 3949},
    {27 , 3940},
    {28 , 3929},
    {30 , 3919},
    {32 , 3908},
    {33 , 3896},
    {35 , 3884},
    {36 , 3871},
    {38 , 3861},
    {39 , 3853},
    {41 , 3844},
    {43 , 3838},
    {44 , 3833},
    {46 , 3826},
    {47 , 3821},
    {49 , 3815},
    {50 , 3810},
    {52 , 3806},
    {54 , 3803},
    {55 , 3798},
    {57 , 3795},
    {58 , 3792},
    {60 , 3789},
    {61 , 3787},
    {63 , 3785},
    {65 , 3782},
    {66 , 3780},
    {68 , 3778},
    {69 , 3774},
    {71 , 3771},
    {72 , 3768},
    {74 , 3765},
    {76 , 3761},
    {77 , 3757},
    {79 , 3752},
    {80 , 3745},
    {82 , 3740},
    {84 , 3733},
    {85 , 3726},
    {87 , 3717},
    {88 , 3708},
    {90 , 3705},
    {91 , 3701},
    {93 , 3697},
    {95 , 3682},
    {96 , 3641},
    {98 , 3573},
    {99 , 3471},
    {100, 3406},
    {100, 3374},
    {100, 3356},
    {100, 3344},
    {100, 3337},
    {100, 3331},
    {100, 3328},
    {100, 3323},
    {100, 3319},
    {100, 3318},
    {100, 3317}
};

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
    {0  , 4185},
    {1  , 4169},
    {3  , 4153},
    {4  , 4138},
    {6  , 4123},
    {7  , 4109},
    {9  , 4096},
    {10 , 4085},
    {12 , 4076},
    {13 , 4065},
    {15 , 4049},
    {16 , 4029},
    {18 , 4013},
    {19 , 3999},
    {21 , 3990},
    {22 , 3981},
    {24 , 3975},
    {25 , 3966},
    {27 , 3957},
    {28 , 3949},
    {30 , 3939},
    {31 , 3929},
    {33 , 3919},
    {34 , 3909},
    {36 , 3895},
    {37 , 3881},
    {39 , 3869},
    {40 , 3859},
    {42 , 3851},
    {43 , 3842},
    {45 , 3836},
    {46 , 3830},
    {48 , 3824},
    {49 , 3820},
    {51 , 3814},
    {52 , 3809},
    {54 , 3805},
    {55 , 3802},
    {57 , 3798},
    {58 , 3795},
    {60 , 3791},
    {61 , 3788},
    {63 , 3786},
    {64 , 3782},
    {66 , 3781},
    {67 , 3777},
    {69 , 3771},
    {70 , 3766},
    {72 , 3760},
    {73 , 3754},
    {75 , 3749},
    {76 , 3745},
    {78 , 3742},
    {79 , 3737},
    {81 , 3733},
    {82 , 3723},
    {84 , 3717},
    {85 , 3713},
    {87 , 3703},
    {88 , 3694},
    {90 , 3692},
    {91 , 3688},
    {93 , 3683},
    {94 , 3662},
    {96 , 3612},
    {97 , 3540},
    {99 , 3433},
    {100, 3298},
    {100, 3279},
    {100, 3270},
    {100, 3263},
    {100, 3262},
    {100, 3260},
    {100, 3258},
    {100, 3258}
};

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
    {0  , 4189},
    {1  , 4172},
    {3  , 4156},
    {4  , 4141},
    {6  , 4128},
    {7  , 4112},
    {9  , 4099},
    {10 , 4085},
    {12 , 4071},
    {13 , 4059},
    {15 , 4049},
    {16 , 4036},
    {18 , 4023},
    {19 , 4010},
    {21 , 4001},
    {22 , 3989},
    {24 , 3978},
    {25 , 3969},
    {27 , 3960},
    {28 , 3950},
    {30 , 3940},
    {31 , 3930},
    {33 , 3920},
    {34 , 3912},
    {36 , 3900},
    {37 , 3887},
    {39 , 3872},
    {40 , 3862},
    {42 , 3852},
    {43 , 3844},
    {45 , 3837},
    {46 , 3831},
    {48 , 3826},
    {49 , 3818},
    {51 , 3815},
    {52 , 3810},
    {54 , 3805},
    {55 , 3800},
    {57 , 3796},
    {58 , 3793},
    {60 , 3790},
    {61 , 3786},
    {63 , 3782},
    {64 , 3780},
    {66 , 3776},
    {67 , 3772},
    {69 , 3763},
    {70 , 3753},
    {72 , 3746},
    {73 , 3740},
    {75 , 3734},
    {76 , 3729},
    {78 , 3725},
    {79 , 3721},
    {81 , 3715},
    {82 , 3710},
    {84 , 3703},
    {85 , 3697},
    {87 , 3687},
    {88 , 3680},
    {90 , 3676},
    {91 , 3674},
    {93 , 3669},
    {94 , 3647},
    {96 , 3597},
    {97 , 3523},
    {99 , 3417},
    {100, 3275},
    {100, 3261},
    {100, 3257},
    {100, 3254},
    {100, 3254},
    {100, 3251},
    {100, 3250},
    {100, 3251}
};

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}
};

/////////////////////////////////////////////////////////////////////
// <Rbat, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
    {240, 4158},
    {240, 4125},
    {255, 4098},
    {275, 4083},
    {280, 4060},
    {285, 4030},
    {295, 4006},
    {305, 3989},
    {310, 3977},
    {318, 3970},
    {318, 3961},
    {323, 3953},
    {332, 3948},
    {327, 3938},
    {328, 3929},
    {327, 3919},
    {327, 3908},
    {325, 3897},
    {323, 3886},
    {318, 3874},
    {320, 3865},
    {318, 3855},
    {322, 3847},
    {322, 3839},
    {322, 3832},
    {327, 3827},
    {327, 3822},
    {330, 3815},
    {332, 3811},
    {338, 3806},
    {340, 3802},
    {343, 3798},
    {342, 3794},
    {347, 3792},
    {348, 3788},
    {348, 3785},
    {353, 3784},
    {355, 3781},
    {358, 3780},
    {360, 3778},
    {363, 3775},
    {365, 3772},
    {368, 3768},
    {372, 3766},
    {372, 3760},
    {375, 3756},
    {382, 3752},
    {385, 3747},
    {388, 3739},
    {395, 3733},
    {403, 3726},
    {412, 3718},
    {430, 3712},
    {458, 3706},
    {495, 3698},
    {543, 3688},
    {602, 3665},
    {668, 3625},
    {653, 3591},
    {607, 3562},
    {565, 3539},
    {535, 3519},
    {503, 3500},
    {482, 3488},
    {460, 3475},
    {445, 3466},
    {430, 3457},
    {420, 3451},
    {408, 3443},
    {402, 3439},
    {393, 3434},
    {387, 3430},
    {383, 3427},
    {375, 3423},
    {368, 3420}
};

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
    {170, 4168},
    {170, 4142},
    {173, 4123},
    {180, 4109},
    {178, 4095},
    {185, 4089},
    {190, 4079},
    {190, 4060},
    {192, 4035},
    {190, 4012},
    {192, 3996},
    {197, 3986},
    {197, 3976},
    {200, 3969},
    {203, 3962},
    {205, 3955},
    {210, 3949},
    {210, 3940},
    {207, 3929},
    {207, 3919},
    {203, 3908},
    {202, 3896},
    {195, 3884},
    {188, 3871},
    {188, 3861},
    {188, 3853},
    {187, 3844},
    {187, 3838},
    {192, 3833},
    {190, 3826},
    {190, 3821},
    {190, 3815},
    {192, 3810},
    {193, 3806},
    {197, 3803},
    {195, 3798},
    {197, 3795},
    {200, 3792},
    {202, 3789},
    {205, 3787},
    {205, 3785},
    {205, 3782},
    {205, 3780},
    {208, 3778},
    {203, 3774},
    {205, 3771},
    {203, 3768},
    {205, 3765},
    {205, 3761},
    {207, 3757},
    {210, 3752},
    {207, 3745},
    {208, 3740},
    {210, 3733},
    {213, 3726},
    {213, 3717},
    {210, 3708},
    {218, 3705},
    {230, 3701},
    {252, 3697},
    {267, 3682},
    {273, 3641},
    {300, 3573},
    {363, 3471},
    {345, 3406},
    {292, 3374},
    {260, 3356},
    {243, 3344},
    {232, 3337},
    {218, 3331},
    {213, 3328},
    {210, 3323},
    {203, 3319},
    {202, 3318},
    {200, 3317}
};

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
    {102, 4185},
    {102, 4169},
    {102, 4153},
    {105, 4138},
    {102, 4123},
    {105, 4109},
    {107, 4096},
    {110, 4085},
    {113, 4076},
    {112, 4065},
    {113, 4049},
    {110, 4029},
    {112, 4013},
    {110, 3999},
    {115, 3990},
    {117, 3981},
    {118, 3975},
    {118, 3966},
    {120, 3957},
    {120, 3949},
    {123, 3939},
    {125, 3929},
    {123, 3919},
    {123, 3909},
    {120, 3895},
    {113, 3881},
    {110, 3869},
    {107, 3859},
    {108, 3851},
    {105, 3842},
    {103, 3836},
    {103, 3830},
    {103, 3824},
    {103, 3820},
    {103, 3814},
    {103, 3809},
    {105, 3805},
    {105, 3802},
    {108, 3798},
    {110, 3795},
    {108, 3791},
    {112, 3788},
    {112, 3786},
    {112, 3782},
    {115, 3781},
    {113, 3777},
    {108, 3771},
    {108, 3766},
    {107, 3760},
    {103, 3754},
    {103, 3749},
    {105, 3745},
    {107, 3742},
    {107, 3737},
    {110, 3733},
    {107, 3723},
    {105, 3717},
    {110, 3713},
    {108, 3703},
    {105, 3694},
    {112, 3692},
    {108, 3688},
    {115, 3683},
    {113, 3662},
    {117, 3612},
    {120, 3540},
    {138, 3433},
    {165, 3298},
    {135, 3279},
    {118, 3270},
    {108, 3263},
    {107, 3262},
    {102, 3260},
    {98 , 3258},
    {103, 3258}
};

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
    {92 , 4189},
    {92 , 4172},
    {90 , 4156},
    {90 , 4141},
    {95 , 4128},
    {92 , 4112},
    {92 , 4099},
    {92 , 4085},
    {90 , 4071},
    {92 , 4059},
    {95 , 4049},
    {95 , 4036},
    {95 , 4023},
    {95 , 4010},
    {98 , 4001},
    {97 , 3989},
    {97 , 3978},
    {98 , 3969},
    {102, 3960},
    {100, 3950},
    {102, 3940},
    {102, 3930},
    {102, 3920},
    {105, 3912},
    {103, 3900},
    {102, 3887},
    {95 , 3872},
    {97 , 3862},
    {95 , 3852},
    {92 , 3844},
    {95 , 3837},
    {92 , 3831},
    {95 , 3826},
    {92 , 3818},
    {97 , 3815},
    {93 , 3810},
    {95 , 3805},
    {93 , 3800},
    {95 , 3796},
    {98 , 3793},
    {97 , 3790},
    {100, 3786},
    {97 , 3782},
    {100, 3780},
    {100, 3776},
    {100, 3772},
    {93 , 3763},
    {95 , 3753},
    {93 , 3746},
    {95 , 3740},
    {95 , 3734},
    {93 , 3729},
    {95 , 3725},
    {93 , 3721},
    {93 , 3715},
    {95 , 3710},
    {97 , 3703},
    {98 , 3697},
    {95 , 3687},
    {95 , 3680},
    {93 , 3676},
    {98 , 3674},
    {102, 3669},
    {100, 3647},
    {102, 3597},
    {100, 3523},
    {108, 3417},
    {125, 3275},
    {103, 3261},
    {97 , 3257},
    {93 , 3254},
    {90 , 3254},
    {87 , 3251},
    {85 , 3250},
    {85 , 3251}
};

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}
};


int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);
